local module = {}

module["Name"] = "Chronicles"

-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

-- Variable to store the state of the X-ray (on/off)
local xrayState = false

-- Function to toggle the X-ray effect
local function toggleXray(state)
    if state then
        -- Enable X-ray (make map parts transparent and white)
        for _, part in ipairs(workspace:GetDescendants()) do
            if part:IsA("BasePart") and not part:IsDescendantOf(game.Players) and not part:IsDescendantOf(game.Lighting) then
                part.Transparency = 0.5  -- Adjust transparency as needed
                part.Color = Color3.fromRGB(255, 255, 255)  -- Make the part a little white
            end
        end
    else
        -- Disable X-ray (restore original transparency and color)
        for _, part in ipairs(workspace:GetDescendants()) do
            if part:IsA("BasePart") and not part:IsDescendantOf(game.Players) and not part:IsDescendantOf(game.Lighting) then
                part.Transparency = 0  -- Restore original transparency
                part.Color = Color3.new(1, 1, 1)  -- Restore original color (assuming white was the original color)
            end
        end
    end
end

-- Module definition
module[1] = {
    Type = "Toggle",
    Args = {"X-ray [BETA]", function(Self, state)
        xrayState = state
        toggleXray(xrayState)
    end}
}

-- Module definition
module[2] = {
    Type = "Button",
    Args = {"[Good For a tool] Hold Everyone Hostages", function(Self)
        local localplayer = game.Players.LocalPlayer
        local localTeam = localplayer.Team
        
        for _, player in ipairs(game.Players:GetPlayers()) do
            if localTeam == nil or player.Team ~= localTeam then
                if player.Character and player.Character:FindFirstChild("HumanoidRootPart") and player ~= localplayer then
                    player.Character:FindFirstChild("HumanoidRootPart").Anchored = true
                    player.Character:FindFirstChild("HumanoidRootPart").CFrame = localplayer.Character:FindFirstChild("HumanoidRootPart").CFrame + localplayer.Character:FindFirstChild("HumanoidRootPart").CFrame.LookVector * 5
                end
            end
        end
        
        if localTeam == nil then
            fu.notification("Placed all players in a single point. Kill everyone at once once you decide to.")
        else
            fu.notification("Placed all players not on your team in a single point. Kill everyone at once once you decide to.")
        end
    end}
}

module[3] = {
		Type = "Text",
		Args = {"Made By Brandon Jay | Tiktok: @brx12k"}
	}

_G.Modules = _G.Modules or {}
_G.Modules[#_G.Modules + 1] = module

return module
