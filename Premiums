local module = {}

module["Name"] = "Chronicles"

-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

-- Variables for X-ray effect
local XRAY_TRANSPARENCY = 0.7 -- Transparency value for X-ray effect
local XRAY_COLOR = Color3.fromRGB(0, 191, 255) -- Blue tint color for X-ray effect

-- Variable to track X-ray state
local Xrays = false

-- Define the X-ray function
local function toggleXray(state)
    -- Find all parts that should be affected by the X-ray effect
    for _, part in pairs(workspace:GetDescendants()) do
        if part:IsA("BasePart") and not part:IsDescendantOf(game.Players.LocalPlayer.Character) then
            if state then
                -- Store original properties
                part:SetAttribute("OriginalTransparency", part.Transparency)
                part:SetAttribute("OriginalColor", part.Color)
                -- Set transparency and color to simulate X-ray effect
                part.Transparency = XRAY_TRANSPARENCY
                part.Color = XRAY_COLOR
            else
                -- Restore original properties
                local originalTransparency = part:GetAttribute("OriginalTransparency")
                local originalColor = part:GetAttribute("OriginalColor")
                if originalTransparency ~= nil then
                    part.Transparency = originalTransparency
                end
                if originalColor ~= nil then
                    part.Color = originalColor
                end
            end
        end
    end
end

-- Define the toggle function
local function toggleXrayEffect()
    Xrays = not Xrays
    toggleXray(Xrays)

    -- If X-ray is enabled, set a timer to disable it after XRAY_DURATION seconds
    if Xrays then
        delay(XRAY_DURATION, function()
            if Xrays then
                Xrays = false
                toggleXray(false)
            end
        end)
    end
end

-- Handle the toggle functionality
module[1] = {
    Type = "Toggle",
    Args = {"X-ray [Last Only 5s]", function(Self)
        if Xrays then
            -- Turn off immediately
            Xrays = false
            toggleXray(false)
        else
            -- Turn on and start the duration timer
            toggleXrayEffect()
        end
    end}
}

-- Module definition
module[2] = {
    Type = "Button",
    Args = {"[Good For a tool] Hold Everyone Hostages", function(Self)
        local localplayer = game.Players.LocalPlayer
        local localTeam = localplayer.Team
        
        for _, player in ipairs(game.Players:GetPlayers()) do
            if localTeam == nil or player.Team ~= localTeam then
                if player.Character and player.Character:FindFirstChild("HumanoidRootPart") and player ~= localplayer then
                    player.Character:FindFirstChild("HumanoidRootPart").Anchored = true
                    player.Character:FindFirstChild("HumanoidRootPart").CFrame = localplayer.Character:FindFirstChild("HumanoidRootPart").CFrame + localplayer.Character:FindFirstChild("HumanoidRootPart").CFrame.LookVector * 5
                end
            end
        end
        
        if localTeam == nil then
            fu.notification("Placed all players in a single point. Kill everyone at once once you decide to.")
        else
            fu.notification("Placed all players not on your team in a single point. Kill everyone at once once you decide to.")
        end
    end}
}

module[3] = {
		Type = "Text",
		Args = {"Made By Brandon Jay | Tiktok: @brx12k"}
	}

_G.Modules = _G.Modules or {}
_G.Modules[#_G.Modules + 1] = module

return module
